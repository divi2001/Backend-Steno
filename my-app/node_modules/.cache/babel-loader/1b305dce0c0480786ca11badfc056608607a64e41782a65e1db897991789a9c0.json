{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academics\\\\M. Tech\\\\Shorthand nodejs-react-sqlite\\\\dotnet\\\\ShorthandBasicApp\\\\Backend\\\\Backend\\\\Backend-Steno\\\\my-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto'; // Needed for Chart.js v3\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/getstudents');\n        setStudents(response.data);\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n      }\n    };\n    fetchStudents();\n  }, []);\n  useEffect(() => {\n    const paidCount = students.filter(student => student.amount === 'paid').length;\n    const pendingCount = students.filter(student => student.amount === 'pending').length;\n    setChartData({\n      labels: ['Paid', 'Pending'],\n      datasets: [{\n        label: 'Payment Status',\n        data: [paidCount, pendingCount],\n        backgroundColor: ['rgba(75, 192, 192, 0.2)',\n        // Green\n        'rgba(255, 99, 132, 0.2)' // Red\n        ],\n        borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],\n        borderWidth: 1\n      }]\n    });\n  }, [students]); // Recalculate when students data changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Payment Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"m1cIXHfk1b3qW6Y0ImUXqS16Ksk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pie","jsxDEV","_jsxDEV","Dashboard","_s","students","setStudents","chartData","setChartData","fetchStudents","response","get","data","error","console","paidCount","filter","student","amount","length","pendingCount","labels","datasets","label","backgroundColor","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Academics/M. Tech/Shorthand nodejs-react-sqlite/dotnet/ShorthandBasicApp/Backend/Backend/Backend-Steno/my-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chart.js/auto';  // Needed for Chart.js v3\r\n\r\nfunction Dashboard() {\r\n  const [students, setStudents] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/getstudents');\r\n        setStudents(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch students:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const paidCount = students.filter(student => student.amount === 'paid').length;\r\n    const pendingCount = students.filter(student => student.amount === 'pending').length;\r\n\r\n    setChartData({\r\n      labels: ['Paid', 'Pending'],\r\n      datasets: [\r\n        {\r\n          label: 'Payment Status',\r\n          data: [paidCount, pendingCount],\r\n          backgroundColor: [\r\n            'rgba(75, 192, 192, 0.2)', // Green\r\n            'rgba(255, 99, 132, 0.2)', // Red\r\n          ],\r\n          borderColor: [\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(255, 99, 132, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    });\r\n  }, [students]);  // Recalculate when students data changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student Payment Status</h1>\r\n      <Pie data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC;QACrEL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAGV,QAAQ,CAACW,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,MAAM,CAAC,CAACC,MAAM;IAC9E,MAAMC,YAAY,GAAGf,QAAQ,CAACW,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,SAAS,CAAC,CAACC,MAAM;IAEpFX,YAAY,CAAC;MACXa,MAAM,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;MAC3BC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,gBAAgB;QACvBX,IAAI,EAAE,CAACG,SAAS,EAAEK,YAAY,CAAC;QAC/BI,eAAe,EAAE,CACf,yBAAyB;QAAE;QAC3B,yBAAyB,CAAE;QAAA,CAC5B;QACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,CACxB;QACDC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC,CAAC,CAAE;;EAEjB,oBACEH,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA,CAACF,GAAG;MAACY,IAAI,EAAEL;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAAC3B,EAAA,CA/CQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}