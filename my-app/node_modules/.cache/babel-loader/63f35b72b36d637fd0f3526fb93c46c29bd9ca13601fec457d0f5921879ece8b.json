{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academics\\\\M. Tech\\\\Shorthand nodejs-react-sqlite\\\\dotnet\\\\ShorthandBasicApp\\\\Backend\\\\Backend\\\\Backend-Steno\\\\my-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto'; // Needed for Chart.js v3\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [chartData, setChartData] = useState({\n    labels: ['Paid', 'Pending'],\n    datasets: [{\n      label: 'Payment Status',\n      data: [0, 0],\n      // Initial data set to zero\n      backgroundColor: ['rgba(75, 192, 192, 0.2)',\n      // Green for Paid\n      'rgba(255, 99, 132, 0.2)' // Red for Pending\n      ],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/getstudents');\n        setStudents(response.data);\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n      }\n    };\n    fetchStudents();\n  }, []);\n  useEffect(() => {\n    if (students && students.length > 0) {\n      const paidCount = students.filter(student => student.amount === 'paid').length;\n      const pendingCount = students.filter(student => student.amount === 'pending').length;\n      setChartData({\n        labels: ['Paid', 'Pending'],\n        datasets: [{\n          label: 'Payment Status',\n          data: [paidCount, pendingCount],\n          backgroundColor: ['rgba(75, 192, 192, 0.2)',\n          // Green\n          'rgba(255, 99, 132, 0.2)' // Red\n          ],\n          borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],\n          borderWidth: 1\n        }]\n      });\n    }\n  }, [students]); // Re-calculate when students data changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Payment Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"YznjLEVxTDcuceCy8tYf4R7mn98=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pie","jsxDEV","_jsxDEV","Dashboard","_s","students","setStudents","chartData","setChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","fetchStudents","response","get","error","console","length","paidCount","filter","student","amount","pendingCount","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Academics/M. Tech/Shorthand nodejs-react-sqlite/dotnet/ShorthandBasicApp/Backend/Backend/Backend-Steno/my-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chart.js/auto';  // Needed for Chart.js v3\r\n\r\nfunction Dashboard() {\r\n  const [students, setStudents] = useState([]);\r\n  const [chartData, setChartData] = useState({\r\n    labels: ['Paid', 'Pending'],\r\n    datasets: [{\r\n      label: 'Payment Status',\r\n      data: [0, 0],  // Initial data set to zero\r\n      backgroundColor: [\r\n        'rgba(75, 192, 192, 0.2)',  // Green for Paid\r\n        'rgba(255, 99, 132, 0.2)'   // Red for Pending\r\n      ],\r\n      borderColor: [\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(255, 99, 132, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/getstudents');\r\n        setStudents(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch students:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (students && students.length > 0) {\r\n      const paidCount = students.filter(student => student.amount === 'paid').length;\r\n      const pendingCount = students.filter(student => student.amount === 'pending').length;\r\n\r\n      setChartData({\r\n        labels: ['Paid', 'Pending'],\r\n        datasets: [{\r\n          label: 'Payment Status',\r\n          data: [paidCount, pendingCount],\r\n          backgroundColor: [\r\n            'rgba(75, 192, 192, 0.2)',  // Green\r\n            'rgba(255, 99, 132, 0.2)',  // Red\r\n          ],\r\n          borderColor: [\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(255, 99, 132, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        }]\r\n      });\r\n    }\r\n  }, [students]);  // Re-calculate when students data changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student Payment Status</h1>\r\n      <Pie data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,MAAM,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;IAC3BC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAAG;MACfC,eAAe,EAAE,CACf,yBAAyB;MAAG;MAC5B,yBAAyB,CAAG;MAAA,CAC7B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,mCAAmC,CAAC;QACrEZ,WAAW,CAACW,QAAQ,CAACL,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDH,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,IAAIA,QAAQ,CAACgB,MAAM,GAAG,CAAC,EAAE;MACnC,MAAMC,SAAS,GAAGjB,QAAQ,CAACkB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,MAAM,CAAC,CAACJ,MAAM;MAC9E,MAAMK,YAAY,GAAGrB,QAAQ,CAACkB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,SAAS,CAAC,CAACJ,MAAM;MAEpFb,YAAY,CAAC;QACXC,MAAM,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;QAC3BC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,gBAAgB;UACvBC,IAAI,EAAE,CAACU,SAAS,EAAEI,YAAY,CAAC;UAC/Bb,eAAe,EAAE,CACf,yBAAyB;UAAG;UAC5B,yBAAyB,CAAG;UAAA,CAC7B;UACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,CACxB;UACDC,WAAW,EAAE;QACf,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAE;;EAEjB,oBACEH,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA,CAACF,GAAG;MAACY,IAAI,EAAEL;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAAC3B,EAAA,CA9DQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}